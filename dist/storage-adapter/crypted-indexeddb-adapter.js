var V=Object.defineProperty,Z=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var C=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var L=(r,e,t)=>e in r?V(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,z=(r,e)=>{for(var t in e||={})M.call(e,t)&&L(r,t,e[t]);if(C)for(var t of C(e))F.call(e,t)&&L(r,t,e[t]);return r},T=(r,e)=>Z(r,j(e)),c=(r,e)=>V(r,"name",{value:e,configurable:!0});var R=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var w=(r,e,t)=>(R(r,e,"read from private field"),t?t.call(r):e.get(r)),D=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},E=(r,e,t,s)=>(R(r,e,"write to private field"),s?s.call(r,t):e.set(r,t),t);var K=(r,e,t)=>(R(r,e,"access private method"),t);var u=(r,e,t)=>new Promise((s,o)=>{var n=l=>{try{i(t.next(l))}catch(d){o(d)}},a=l=>{try{i(t.throw(l))}catch(d){o(d)}},i=l=>l.done?s(l.value):Promise.resolve(l.value).then(n,a);i((t=t.apply(r,e)).next())});function H(r){if(r.length%4!==0)throw new Error("Unable to parse base64 string (invalid length).");let e=r.indexOf("=");if(e!==-1&&e<r.length-2)throw new Error("Unable to parse base64 string (octets).");let t=r.endsWith("==")?2:r.endsWith("=")?1:0,s=r.length,o=new Uint8Array(3*(s/4)),n;for(let a=0,i=0;a<s;a+=4,i+=3)n=P(r.charCodeAt(a))<<18|P(r.charCodeAt(a+1))<<12|P(r.charCodeAt(a+2))<<6|P(r.charCodeAt(a+3)),o[i]=n>>16,o[i+1]=n>>8&255,o[i+2]=n&255;return o.subarray(0,o.length-t)}c(H,"base64ToBytes");var f=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","_","-"],U=(()=>{let e=new Uint8Array(256);for(let t=0;t<256;++t)e[t]=255;return f.forEach((t,s)=>{e[t.charCodeAt(0)]=s}),e["=".charCodeAt(0)]=0,e})();function P(r){if(r>=U.length)throw new Error("Unable to parse base64 string (code beyond length).");let e=U[r];if(e===255)throw new Error("Unable to parse base64 string (invalid code).");return e}c(P,"getBase64Code");function Y(r){let e="",t,s=r.length;for(t=2;t<s;t+=3)e+=f[r[t-2]>>2],e+=f[(r[t-2]&3)<<4|r[t-1]>>4],e+=f[(r[t-1]&15)<<2|r[t]>>6],e+=f[r[t]&63];return t===s+1&&(e+=f[r[t-2]>>2],e+=f[(r[t-2]&3)<<4],e+="=="),t===s&&(e+=f[r[t-2]>>2],e+=f[(r[t-2]&3)<<4|r[t-1]>>4],e+=f[(r[t-1]&15)<<2],e+="="),e}c(Y,"bytesToBase64");var $=c(r=>{let e=new TextEncoder;return window.crypto.subtle.importKey("raw",e.encode(r),"PBKDF2",!1,["deriveKey"])},"getPasswordKey"),G=c((r,e,t)=>window.crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:25e4,hash:"SHA-256"},r,{name:"AES-GCM",length:256},!1,t),"deriveKey");function O(r,e){return u(this,null,function*(){try{let t=window.crypto.getRandomValues(new Uint8Array(16)),s=window.crypto.getRandomValues(new Uint8Array(12)),o=yield $(e),n=yield G(o,t,["encrypt"]),a=yield window.crypto.subtle.encrypt({name:"AES-GCM",iv:s},n,new TextEncoder().encode(r)),i=new Uint8Array(a),l=new Uint8Array(t.byteLength+s.byteLength+i.byteLength);return l.set(t,0),l.set(s,t.byteLength),l.set(i,t.byteLength+s.byteLength),Y(l)}catch(t){throw console.log(`Encryption Error - ${t}`),t}})}c(O,"encryptData");function q(r,e){return u(this,null,function*(){try{let t=H(r),s=t.slice(0,16),o=t.slice(16,16+12),n=t.slice(16+12),a=yield $(e),i=yield G(a,s,["decrypt"]),l=yield window.crypto.subtle.decrypt({name:"AES-GCM",iv:o},i,n);return new TextDecoder().decode(l)}catch(t){throw console.log(`Decryption Error - ${t}`),t}})}c(q,"decryptData");var v,N,h=class{constructor(){D(this,v);this.db=null}initialize(){return new Promise((e,t)=>{K(this,v,N).call(this).then(s=>{e(s)}).catch(s=>{console.log(s),t(s)})})}openCatalog(){let e=indexedDB.open("IDBCatalog",1);return e.onupgradeneeded=({target:t})=>{let s=t.result;if(s.objectStoreNames.contains("IDBAKV")&&s.deleteObjectStore("IDBAKV"),!s.objectStoreNames.contains("IDBAKV")){let o=s.createObjectStore("IDBAKV",{keyPath:"id",autoIncrement:!0});o.createIndex("app","app",{unique:!1}),o.createIndex("key","key",{unique:!1}),o.createIndex("appkey","appkey",{unique:!0})}},e}getAppKeyAsync(e,t){return u(this,null,function*(){let n=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").index("appkey"),a=`${e},${t}`,i=n.get(a);return new Promise((l,d)=>{i.onsuccess=({target:p})=>{let g=p.result;(g===null||typeof g=="undefined")&&(g={id:0,success:!1}),l(g)},i.onerror=p=>{d(p)}})})}setAppKeyAsync(e,t,s){return u(this,null,function*(){let n=this.db.transaction(["IDBAKV"],"readwrite").objectStore("IDBAKV"),a=n.index("appkey"),i=`${e},${t}`,l=a.get(i);return new Promise((d,p)=>{l.onsuccess=({target:g})=>{let b=g.result;b==null?b={app:e,key:t,appkey:`${e},${t}`,val:s}:b.val=s;let S=n.put(b);S.onerror=()=>{p({success:!1,error:S.error}),console.error("IDBCatalog.setAppKey (set) onerror"),console.error(l.error)},S.onsuccess=()=>{d({success:!0})}},l.onerror=()=>{p({success:!1,error:l.error}),console.error("IDBCatalog.setAppKey (get) onerror"),console.error(l.error)}})})}deleteAppKeyAsync(e){let o=this.db.transaction(["IDBAKV"],"readwrite").objectStore("IDBAKV").delete(e);return new Promise((n,a)=>{o.onsuccess=()=>{n({success:!0})},o.onerror=i=>{a({success:!1,error:i}),console.error("IDBCatalog.deleteAppKey raised onerror"),console.error(o.error)}})}getAppKeysAsync(e){return u(this,null,function*(){let o=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").index("app"),n=IDBKeyRange.only(e),a=o.openCursor(n),i=[];return new Promise((l,d)=>{a.onsuccess=()=>{let p=a.result;if(p){let g=p.value;i.push(g),p.continue()}else l(i)},a.onerror=p=>{d(p)}})})}getAppKeys(e,t){let n=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").index("app"),a=IDBKeyRange.only(e),i=n.openCursor(a),l=[];i.onsuccess=((d,p)=>()=>{let g=i.result;if(g){let b=g.value;d.push(b),g.continue()}else typeof p=="function"?p(d):console.log(d)})(l,t),i.onerror=(d=>p=>{typeof d=="function"?d(null):(console.error("IDBCatalog.getAppKeys raised onerror"),console.error(p))})(t)}getAllKeys(e){let o=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").openCursor(),n=[];o.onsuccess=((a,i)=>({target:l})=>{let d=l.result;if(d){let p=d.value;a.push(p),d.continue()}else typeof i=="function"?i(a):console.log(a)})(n,e),o.onerror=(a=>i=>{typeof a=="function"&&a(null)})(e)}};c(h,"IDBCatalog"),v=new WeakSet,N=c(function(){return u(this,null,function*(){let e=this,t=this.openCatalog();return new Promise((s,o)=>{t.onsuccess=({target:n})=>{e.db=n.result,s(e)},t.onerror=n=>{o(n)}})})},"#initializeCatalog");var y=typeof window!="undefined"&&!!window.__loki_idb_debug;y&&console.log("DEBUG: Running crypted-indexeddb-adapter in DEBUG mode");if(!window.crypto.subtle)throw alert("Required crypto lib is not available, are you using SSL?"),new Error("Required crypto lib is not available");var I,x,_,m=class{constructor(e){D(this,x);D(this,I,c(()=>{this.catalog&&this.catalog.db&&(this.catalog.db.close(),this.catalog.db=null)},"#closeDatabase"));this.loadDatabase=c((e,t)=>{if(y&&console.debug("loading database"),this.catalog===null||this.catalog.db===null){new h().initialize().then(s=>{this.catalog=s,this.loadDatabase(e,t)});return}this.catalog.getAppKeyAsync(this.app,e).then(s=>{let{success:o}=s;if(o===!1)t(null);else{let{val:n}=s;this.options.beforeRead?this.options.beforeRead(n).then(a=>{y&&console.debug(`DESERIALIZED STRING: ${a}`),t(a)}).catch(a=>{console.error(a),t(a)}):t(n)}}).catch(s=>{console.error(s),t(s)})},"loadDatabase");this.loadDatabaseAsync=c(e=>u(this,null,function*(){return y&&console.debug("loading database"),new Promise((t,s)=>{let o=c(()=>this.catalog.getAppKeyAsync(this.app,e).then(n=>{let{success:a}=n;if(a===!1)s(null);else{let{val:i}=n,l=i;this.options.beforeRead?this.options.beforeRead(l).then(d=>{y&&console.debug(`DESERIALIZED STRING: ${d}`),t(d)}).catch(d=>{s(d)}):t(l)}}),"doLoad");this.catalog===null||this.catalog.db===null?new h().initialize().then(n=>{this.catalog=n,o()}).catch(n=>{s(n)}):o()})}),"loadDatabaseAsync");this.saveDatabase=c((e,t,s)=>{y&&console.debug(`in saveDatabase(${e}, ${t}, ${s})`);let o=c(()=>{this.options.beforeWrite?this.options.beforeWrite(t).then(n=>{y&&console.debug(`SERIALIZED STRING: ${n}`),this.catalog.setAppKeyAsync(this.app,e,n).then(a=>{s(a)}).catch(a=>{s(a)})}).catch(n=>{s(n)}):(y&&console.debug(`SERIALIZED STRING: ${t}`),this.catalog.setAppKeyAsync(this.app,e,t).then(n=>{s(n)}).catch(n=>{s(n)}))},"doSave");this.catalog===null||this.catalog.db===null?new h().initialize().then(n=>{this.catalog=n,this.saveDatabaseAsync(e,t).then(()=>{s(void 0)}).catch(a=>{s(new Error("Error saving database: "+a))}).finally(()=>{this.options.closeAfterSave===!0&&w(this,I).call(this)})}).catch(n=>{s(new Error("Error saving database: "+n))}):o()},"saveDatabase");this.deleteDatabase=c((e,t)=>{if(this.catalog===null||this.catalog.db===null){new h().initialize().then(s=>{this.catalog=s,this.deleteDatabase(e,t)}).catch(s=>{t(new Error("Error deleting database: "+s))});return}this.catalog.getAppKeyAsync(this.app,e).then(s=>{let o=s.id;o!==0&&this.catalog.deleteAppKeyAsync(o).then(n=>{typeof t=="function"&&t(n)}).catch(n=>{typeof t=="function"&&t({success:!1,error:n})})}).catch(s=>{typeof t=="function"&&t({success:!1,error:s})})},"deleteDatabase");this.deleteDatabasePartitions=c(e=>{this.getDatabaseList(t=>{if(t instanceof Error)throw t;t.forEach(s=>{s.startsWith(e)&&this.deleteDatabase(s)})})},"deleteDatabasePartitions");this.getDatabaseList=c(e=>{if(this.catalog===null||this.catalog.db===null){new h().initialize().then(t=>{this.catalog=t,this.getDatabaseList(e)}).catch(t=>{e(new Error("Error getting database list: "+t))});return}this.catalog.getAppKeys(this.app,t=>{let s=[];for(let o=0;o<t.length;o++)s.push(t[o].key);typeof e=="function"?e(s):s.forEach(o=>{console.log(o)})})},"getDatabaseList");this.getDatabaseListAsync=c(()=>new Promise((e,t)=>{this.catalog===null||this.catalog.db===null?new h().initialize().then(s=>{this.catalog=s,this.catalog.getAppKeysAsync(this.app).then(o=>{let n=o.map(a=>a.key);e(n)}).catch(o=>{t(o)})}).catch(s=>{t(s)}):this.catalog.getAppKeysAsync(this.app).then(s=>{let o=s.map(n=>n.key);e(o)}).catch(s=>{t(s)})}),"getDatabaseListAsync");this.getCatalogSummary=c(e=>{if(this.catalog===null||this.catalog.db===null){new h().initialize().then(t=>{this.catalog=t,this.getCatalogSummary(e)}).catch(t=>{e(new Error("Error getting database list: "+t))});return}this.catalog.getAllKeys(t=>{let s=[],o,n,a,i,l;for(let d=0;d<t.length;d++)o=t[d],a=o.app||"",i=o.key||"",l=o.val||"",n=a.length*2+i.length*2+l.length+1,s.push({app:o.app,key:o.key,size:n});typeof e=="function"?e(s):s.forEach(d=>{console.log(d)})})},"getCatalogSummary");if(y&&console.log("Initialized crypted-indexeddb-adapter"),this.app="sylvie",this.options=e||{},typeof(e==null?void 0:e.appname)!="undefined"&&(this.app=e==null?void 0:e.appname),this.catalog=null,!K(this,x,_).call(this))throw new Error("IndexedDB does not seem to be supported for your environment")}saveDatabaseAsync(e,t){return u(this,null,function*(){return new Promise((s,o)=>{let n=c(()=>{this.options.beforeWrite?this.options.beforeWrite(t).then(a=>{y&&console.debug(`ENCRYPTED STRING: ${a}`),this.catalog.setAppKeyAsync(this.app,e,a).then(i=>{i.success===!0?s():o(i)}).catch(i=>{o(i)})}).catch(a=>{o(a)}):(y&&console.debug(`SERIALIZED STRING: ${t}`),this.catalog.setAppKeyAsync(this.app,e,t).then(a=>{a.success===!0?s():o(a)}).catch(a=>{o(a)}))},"doSave");this.catalog===null||this.catalog.db===null?new h().initialize().then(a=>{this.catalog=a,this.saveDatabaseAsync(e,t).then(s).catch(i=>{o(new Error("Error saving database: "+i))}).finally(()=>{this.options.closeAfterSave===!0&&w(this,I).call(this)})}).catch(a=>{o(a)}):n()})})}deleteDatabaseAsync(e){return u(this,null,function*(){return new Promise((t,s)=>{let o=c(()=>this.catalog.getAppKeyAsync(this.app,e).then(n=>{let a=n.id;a!==0&&this.catalog.deleteAppKeyAsync(a).then(i=>{i.success===!0?t():s(i)}).catch(i=>{s(i)})}).catch(n=>{s(n)}),"doDelete");this.catalog===null||this.catalog.db===null?new h().initialize().then(n=>{this.catalog=n,o()}).catch(n=>{s(n)}):o()})})}};c(m,"IndexedDBAdapter"),I=new WeakMap,x=new WeakSet,_=c(function(){return!!(typeof indexedDB!="undefined"&&indexedDB)},"#checkIDBAvailability");typeof window!="undefined"&&Object.assign(window,{IndexedDBAdapter:m});var W=typeof window!="undefined"&&!!window.__loki_idb_debug;W&&console.log("DEBUG: Running crypted-indexeddb-adapter in DEBUG mode");if(!window.crypto.subtle)throw alert("Required crypto lib is not available, are you using SSL?"),new Error("Required crypto lib is not available");var A,B=class{constructor(e){D(this,A,void 0);this.loadDatabase=c((e,t)=>{this.idbAdapter.loadDatabase(e,t)},"loadDatabase");this.loadDatabaseAsync=c(e=>u(this,null,function*(){return this.idbAdapter.loadDatabaseAsync(e)}),"loadDatabaseAsync");this.saveDatabase=c((e,t,s)=>this.idbAdapter.saveDatabase(e,t,s),"saveDatabase");this.deleteDatabase=c((e,t)=>this.idbAdapter.deleteDatabase(e,t),"deleteDatabase");this.deleteDatabasePartitions=c(e=>{this.idbAdapter.deleteDatabasePartitions(e)},"deleteDatabasePartitions");this.getDatabaseList=c(e=>{this.idbAdapter.getDatabaseList(e)},"getDatabaseList");this.getDatabaseListAsync=c(()=>this.idbAdapter.getDatabaseListAsync(),"getDatabaseListAsync");W&&console.log("Initialized crypted-indexeddb-adapter"),this.app="sylvie",typeof(e==null?void 0:e.appname)!="undefined"&&(this.app=e==null?void 0:e.appname),e.secret&&E(this,A,e.secret||"");let t=this;this.idbAdapter=new m(T(z({},e),{beforeRead(s){return q(s,w(t,A))},beforeWrite(s){return O(s,w(t,A))}}))}usePassword(e){E(this,A,e)}saveDatabaseAsync(e,t){return u(this,null,function*(){return this.idbAdapter.saveDatabaseAsync(e,t)})}deleteDatabaseAsync(e){return u(this,null,function*(){return this.idbAdapter.deleteDatabaseAsync(e)})}changePassword(e,t){return u(this,null,function*(){return new Promise((s,o)=>{this.loadDatabase(e,n=>{let a=w(this,A);E(this,A,t),this.saveDatabase(e,n,i=>{i&&(E(this,A,a),i.success===!0?s():o(i)),s()})})})})}};c(B,"CryptedIndexedDBAdapter"),A=new WeakMap;typeof window!="undefined"&&Object.assign(window,{CryptedIndexedDBAdapter:B});export{B as CryptedIndexedDBAdapter};
//# sourceMappingURL=crypted-indexeddb-adapter.js.map
