var u=Object.defineProperty;var h=(s,t)=>u(s,"name",{value:t,configurable:!0});var A=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)};var p=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)};var o=(s,t,e)=>(A(s,t,"access private method"),e);var g=(s,t,e)=>new Promise((i,r)=>{var l=n=>{try{c(e.next(n))}catch(d){r(d)}},P=n=>{try{c(e.throw(n))}catch(d){r(d)}},c=n=>n.done?i(n.value):Promise.resolve(n.value).then(l,P);c((e=e.apply(s,t)).next())});var a,f,m=class{constructor(){p(this,a);this.loadDatabase=h((t,e)=>{o(this,a,f).call(this).then(()=>{this.fs.stat(t).then(i=>{i.isFile()&&this.fs.readFile(t,{encoding:"utf8"}).then(r=>{e(r)}).catch(r=>{e(r)})}).catch(i=>{e(i)}).catch(e)})},"loadDatabase");this.saveDatabase=h((t,e,i)=>{o(this,a,f).call(this).then(()=>{let r=`${t}~`;this.fs.writeFile(r,e).then(()=>{this.fs.rename(r,t).then(()=>i()).catch(i)}).catch(i)}).catch(i)},"saveDatabase");this.deleteDatabase=h((t,e)=>{o(this,a,f).call(this).then(()=>{this.fs.unlink(t).then(()=>e()).catch(i=>{e(i)})}).catch(e)},"deleteDatabase")}};h(m,"FsAdapter"),a=new WeakSet,f=h(function(){return g(this,null,function*(){if(this.fs===null||this.fs===void 0)try{this.fs=yield import("node:fs/promises")}catch(t){console.error(`FsAdapter - ${t}`)}})},"#initializeFS");export{m as FsAdapter};
//# sourceMappingURL=fs-adapter.js.map
