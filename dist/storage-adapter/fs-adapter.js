var y=Object.defineProperty;var o=(e,s)=>y(e,"name",{value:s,configurable:!0});var E=(e,s,t)=>{if(!s.has(e))throw TypeError("Cannot "+t)};var u=(e,s,t)=>{if(s.has(e))throw TypeError("Cannot add the same private member more than once");s instanceof WeakSet?s.add(e):s.set(e,t)};var c=(e,s,t)=>(E(e,s,"access private method"),t);var p=(e,s,t)=>new Promise((r,i)=>{var g=n=>{try{f(t.next(n))}catch(d){i(d)}},v=n=>{try{f(t.throw(n))}catch(d){i(d)}},f=n=>n.done?r(n.value):Promise.resolve(n.value).then(g,v);f((t=t.apply(e,s)).next())});var h,a,m=class{constructor(){u(this,h);this.loadDatabase=o((s,t)=>{c(this,h,a).call(this).then(()=>{this.fs.stat(s).then(r=>{r.isFile()&&this.fs.readFile(s,{encoding:"utf8"}).then(i=>{t(i)}).catch(i=>{t(i)})}).catch(r=>{t(r)}).catch(t)})},"loadDatabase");this.saveDatabase=o((s,t,r)=>{c(this,h,a).call(this).then(()=>{let i=`${s}~`;this.fs.writeFile(i,t).then(()=>{this.fs.rename(i,s).then(()=>r()).catch(r)}).catch(r)}).catch(r)},"saveDatabase");this.deleteDatabase=o((s,t)=>{c(this,h,a).call(this).then(()=>{this.fs.unlink(s).then(()=>t()).catch(r=>{t(r)})}).catch(t)},"deleteDatabase")}};o(m,"FsAdapter"),h=new WeakSet,a=o(function(){return p(this,null,function*(){if(this.fs===null||this.fs===void 0)try{this.fs=yield import("node:fs/promises")}catch(s){console.error(`FsAdapter - ${s}`)}})},"#initializeFS");export{m as FsAdapter};
//# sourceMappingURL=fs-adapter.js.map
