export declare function doQueryOp<T>(val: any, op: any, record: T): any;
export declare const LokiOps: {
    $eq: (a: any, b: any) => boolean;
    $aeq: (a: any, b: any) => boolean;
    $ne: (a: any, b: any) => boolean;
    $dteq: (a: any, b: any) => boolean;
    $gt: (a: any, b: any) => boolean;
    $gte: (a: any, b: any) => boolean;
    $lt: (a: any, b: any) => boolean;
    $lte: (a: any, b: any) => boolean;
    $jgt: (a: any, b: any) => boolean;
    $jgte: (a: any, b: any) => boolean;
    $jlt: (a: any, b: any) => boolean;
    $jlte: (a: any, b: any) => boolean;
    $between: (a: any, vals: [number, number]) => boolean;
    $jbetween: (a: any, vals: [number, number]) => boolean;
    $in: (a: any, b: any) => boolean;
    $inSet: (a: any, b: any) => any;
    $nin: (a: any, b: any) => boolean;
    $keyin: (a: any, b: any) => boolean;
    $nkeyin: (a: any, b: any) => boolean;
    $definedin: (a: any, b: any) => boolean;
    $undefinedin: (a: any, b: any) => boolean;
    $regex: (a: any, b: any) => any;
    $containsString: (a: any, b: any) => boolean;
    $containsNone: (a: any, b: any) => boolean;
    $containsAny: (a: any, b: any) => boolean;
    $contains: (a: any, b: any) => boolean;
    $elemMatch: (a: any, b: any) => boolean;
    $type: <T>(a: any, b: any, record: T) => any;
    $finite: (a: any, b: any) => boolean;
    $size: <T_1>(a: any, b: any, record: T_1) => any;
    $len: <T_2>(a: any, b: any, record: T_2) => any;
    $where: (a: any, b: any) => boolean;
    $not: <T_3>(a: any, b: any, record: T_3) => boolean;
    $and: <T_4>(a: any, b: any, record: T_4) => boolean;
    $or: <T_5>(a: any, b: any, record: T_5) => boolean;
    $exists: (a: any, b: any) => boolean;
};
export declare const valueLevelOps: readonly ["$eq", "$aeq", "$ne", "$dteq", "$gt", "$gte", "$lt", "$lte", "$jgt", "$jgte", "$jlt", "$jlte", "$type"];
export declare const indexedOps: {
    $eq: (a: any, b: any) => boolean;
    $aeq: boolean;
    $dteq: boolean;
    $gt: boolean;
    $gte: boolean;
    $lt: boolean;
    $lte: boolean;
    $in: boolean;
    $between: boolean;
};
